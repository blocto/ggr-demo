import React, { useState } from "react"
import * as fcl from "@onflow/fcl"

import Card from '../components/Card'
import Header from '../components/Header'
import Code from '../components/Code'

const checkClaimed = `\
import GogoroCollectible from 0x8c9bbcdcd7514081

pub fun main(): [Bool] {
  let hashes = [
    "1f08c93f726e7fe19e202845ace787c97e9df546cddc04694e26cb703f3a4b68",
"40af5ffea1a1c7ba5ec299a30876c56a4273253c47f55b9bf950801c7d995422",
"5f3915e888a06194b2dad2a3d1c31f3f9178be36018848f5983bdc0f07d19759",
"c982f95b235634168d2d09d17d9716065a11b30508142e09562a78ad65d8c44e",
"a0c05515805ef8c5411bb5741a29c2b3fc398482137f211de533db0f3e7cb2ef",
"3ab9a5a261e3749a18a2887f4d0e439ab80e8826edf11da6b2004b115198d693",
"94123ccf9621b039a43191356e9cde71db24c41fd571062b82bab691b4e9a1df",
"63dbf81a011fd9a6b254502c3db149b1d6d9bc24442837d3bedb28ef910e4eb9",
"172e0f3c78b3bc25dd21893d2d2997f90997c1b13ce6361f466d228dfdd0a4dc",
"37160a07211ca008e693baf1e99552eb1862a6b919d30d040a40335599fdf08f",
"a4729a7387292b08cf60152593e09edd9ee5a4993df8b031456501e0ebbf75a5",
"294ae781f7ef369146ac7a03f0627c7d6b348adcab0b0baf7bdb8e43d774cb4c",
"fa291ffc5af21aae60091737765fe4e5ebd4570dd73f6e17dcec497d80a65ee5",
"9ff435d973392c269ed892235daf44168f27b217f481e7c2e5b746dcfbb87e00",
"c1d04444bea7b9d09f31822c1b2cac86ca517c6c9b57c63d30412ff2d8204d30",
"8ca8cafe647d3020744818a7ac43ad5667328b7e3ac5043d64321ecc5807dfdc",
"c27942e2fac0fc57ef8cefd919be0b2fbda46db40be1614cd126035d12788144",
"7482a85ac8968a5db54f73394b53299f56dddfa2bbd6fea139b090a9f562abc8",
"96e86c1fcc43b9bb9a812a9bba7a32ca19bacc407531f0eadbb984c831edf507",
"430be858a1d2b42a2b250696c1c6f6c32d1ce66f92823fab50c16e646974e726",
"deb70c0f911e72d5137276644df5f897d157b4f60f7c285f612d045a89ea4499",
"f19d63c698ca2631ab65dc725682d132e8237f612c12849177b3f056378beb8e",
"aafaa3317e55d8b9b9262768721f79aadf2e7cabdf7d987bdeff1f385cfa5344",
"1ab4dcbf493e51c8c39e6f44cfe72efcdbaa8de2eb89eec8d823361ea1ea462e",
"d7213164b5898572bd2c9b9f1d79b0d139f208726b762a05a5e33179d9ddbe30",
"0c5c17aa9d0175a7e88d6aee80fc962a3f973475d7a1641b477893daab4f4c6f",
"f3267b7e6e8883a71c8d21a9d802197845308b2182ff3232e265d16b3f8add77",
"8c5e4c12d69fc1f4f8334bed4718a049f2f7226cf10302ec2920dc008cde75d5",
"3c79b15d7dee5c36e147872bcdf6332ffddbc0a421d542ec3da3cbc90d3843e5",
"9940bf1b1b636525e0fa0f7d2e63bbd9ef7fea936a7597332349b715708f8f6f",
"38009bb2d8a465fa8bff3817b138909b5ae03213b06698ae3ed0fdd29f1c23c4",
"f34c4be8f3a2209ba587b592fc64a4171cb92f25316d81b2ed18cb2e16a7dad1",
"209a291d0c075535bbde5a28501583a50f36d07dc5de78c5a7da9ced3dea1f26",
"2437404918b8981fae3a29ea4b380ad4f14627c58c521a9349ebbf944350def2",
"95246873748dd5df45ee354aa2ae77e8bcd29388d95e6bccbc62ec29fa016424",
"748d98fd22113d7d66d302189f241774ac049623946df799a00bc7b901ead207",
"c0823fe362cfe4e6b5f68bb5e1f86de805917a8b81165d96251d780cbe2cf499",
"fa30f42158b26a1cd22004ab1ebeac88f65672def189730250bfc6a6dc845908",
"e7f37ce20e05cbc4c0d168699257f41d40b9a469234977ff024be73c96469fd7",
"649863f96be6c6e33e35152b23e70b84cd80f8dcdcc202b3e8511ffaba8c1c7e",
"123e362be0657506638392daed62d763e80f5a001ad54e96e5111d2104141f4c",
"bce9d8e2946caccc8d5e1900e9ceeb408c86f381902eebe9caa816e3c5be2319",
"35d15e22dca0f51b53fd81d86b2bb524bdcc3af0f35b28fd9df7d1f1104b2f0c",
"4f25e8f6071a443ab218ae195da25f2264e03d0d1ae220ab3923ebcdbe22d3a4",
"b3952c4cf90ed674b8a694390807b5fbb42519565d789e9eacf96c671389c74e",
"174c7b4f4cf196ee3da30e8e002ef4c1087b18e1b7ebd235a86f727c6eff7926",
"fc7716c8ca128c45952f45de4c5b380af7c628923ed7478a5edab3e6a64d0a29",
"e9d5645720dfbcc83b8d10b4b8df611f6995fa727797751cbe4cfcf2f4b2bd40",
"9d8faa1e16e2ddea912e4f9a41bee49a184eba98e45d74382e237edfd736c458",
"80950da589a9932b6bfcbb47a7fd3a25a73837dc71f18b52c24ec0c1227f7731",
"2f3fec303959d99d1117ea9c2a4eb736afcc6f165ed77efb20619312331f71f8"
  ]

  let claimed: [Bool] = []

  for hash in hashes {
    claimed.append(GogoroCollectible.checkCodeHashUsed(codeHash: hash))
  }
  
  return claimed
}
`;

export default function ScriptTwo() {
  const [data, setData] = useState(null)

  const runScript = async (event) => {
    event.preventDefault()

    const response = await fcl.send([
      fcl.script(checkClaimed),
    ])

    setData(await fcl.decode(response))
  }

  return (
    <Card>
      <Header>檢查領取</Header>

      <button onClick={runScript}>檢查</button>

      {data && (
        <Code>
          {data.map((item, index) => (
            <div key={index}>
              {item ? 'yes' : '-'}
            </div>
          ))}
        </Code>
      )}
    </Card>
  )
}
